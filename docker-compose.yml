version: '3.9'

services:
  backend:
    container_name: 'backend'
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: mysql
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    ports:
      - 8000:8000
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - mailhog
    networks:
      - app

  mysql:
    container_name: 'mysql'
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 8889:3306
    volumes:
      - ./docker/volumes/mysql:/var/lib/mysql
    networks:
      - app

  phpmyadmin:
    container_name: 'phpmyadmin'
    image: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8080:80
    depends_on:
      - mysql
    networks:
      - app

  redis:
    container_name: 'redis'
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - ./docker/volumes/redis:/data
    networks:
      - app

  rabbitmq:
    container_name: 'rabbitmq'
    image: 'rabbitmq:management'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_DEFAULT_USER:-admin}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_DEFAULT_PASS:-password}'
    networks:
      - app

  mailhog:
    container_name: 'mailhog'
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - app
networks:
  app:
    driver: bridge

volumes:
  mysql:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/volumes/mysql
  redis:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/volumes/redis